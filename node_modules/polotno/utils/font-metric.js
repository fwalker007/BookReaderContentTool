"use strict";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var e,n=1,i=arguments.length;n<i;n++)for(var a in e=arguments[n])Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a]);return t}).apply(this,arguments)};Object.defineProperty(exports,"__esModule",{value:!0});var padding,context,canvas,initialized=!1,settings={chars:{capHeight:"S",baseline:"n",xHeight:"x",descent:"p",ascent:"h",tittle:"i"}},initialize=function(){canvas=document.createElement("canvas"),context=canvas.getContext("2d"),initialized=!0},setFont=function(t,e,n){initialized||initialize(),padding=.5*e,canvas.width=2*e,canvas.height=2*e+padding,context.font=n+" "+e+"px "+t,context.textBaseline="top",context.textAlign="center"},setAlignment=function(t){void 0===t&&(t="top");var e="bottom"===t?canvas.height:0;context.setTransform(1,0,0,1,0,e),context.textBaseline=t},updateText=function(t){context.clearRect(0,0,canvas.width,canvas.height),context.fillText(t,canvas.width/2,padding,canvas.width)},computeLineHeight=function(){setAlignment("bottom");var t=canvas.height-measureBottom("A");return setAlignment("top"),measureBottom("A")+t},getPixels=function(t){return updateText(t),context.getImageData(0,0,canvas.width,canvas.height).data},getFirstIndex=function(t){for(var e=3,n=t.length;e<n;e+=4)if(t[e]>0)return(e-3)/4;return t.length},getLastIndex=function(t){for(var e=t.length-1;e>=3;e-=4)if(t[e]>0)return e/4;return 0},normalize=function(t,e,n){var i={},a=t[n];for(var o in t)i[o]=(t[o]-a)/e;return i},measureTop=function(t){return Math.round(getFirstIndex(getPixels(t))/canvas.width)-padding},measureBottom=function(t){return Math.round(getLastIndex(getPixels(t))/canvas.width)-padding},getMetrics=function(t){return void 0===t&&(t=settings.chars),{capHeight:measureTop(t.capHeight),baseline:measureBottom(t.baseline),xHeight:measureTop(t.xHeight),descent:measureBottom(t.descent),bottom:computeLineHeight(),ascent:measureTop(t.ascent),tittle:measureTop(t.tittle),top:0}},FontMetrics=function(t){var e=void 0===t?{}:t,n=e.fontFamily,i=void 0===n?"Times":n,a=e.fontWeight,o=void 0===a?"normal":a,s=e.fontSize,r=void 0===s?200:s;e.origin;return setFont(i,r,o),__assign(__assign({},getMetrics()),{fontFamily:i,fontWeight:o,fontSize:r})};FontMetrics.settings=settings,exports.default=FontMetrics;