"use strict";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var t,r=1,o=arguments.length;r<o;r++)for(var a in t=arguments[r])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ImageToolbar=void 0;var react_1=__importDefault(require("react")),mobx_react_lite_1=require("mobx-react-lite"),core_1=require("@blueprintjs/core"),filters_picker_1=__importDefault(require("./filters-picker"));exports.ImageToolbar=mobx_react_lite_1.observer((function(e){var t=e.store,r=e.hideImageFlip,o=e.hideImageEffects,a=e.hideImageCrop,i=e.hideImageFit,c=t.selectedElements[0],l=c._cropModeEnabled,n=react_1.default.useRef({});return react_1.default.useEffect((function(){l&&(n.current={x:c.x,y:c.y,width:c.width,height:c.height,cropX:c.cropX,cropY:c.cropY,cropWidth:c.cropWidth,cropHeight:c.cropHeight})}),[l]),react_1.default.createElement(core_1.Navbar.Group,{align:core_1.Alignment.LEFT},!l&&react_1.default.createElement(react_1.default.Fragment,null,!r&&react_1.default.createElement(core_1.Popover,{content:react_1.default.createElement(core_1.Menu,null,react_1.default.createElement(core_1.MenuItem,{shouldDismissPopover:!1,icon:"arrows-horizontal",text:"Flip horizontally",onClick:function(){c.set({flipX:!c.flipX})}}),react_1.default.createElement(core_1.MenuItem,{shouldDismissPopover:!1,text:"Flip vertically",icon:"arrows-vertical",onClick:function(){c.set({flipY:!c.flipY})}})),position:core_1.Position.BOTTOM},react_1.default.createElement(core_1.Button,{text:"Flip",minimal:!0})),!o&&react_1.default.createElement(filters_picker_1.default,{element:c}),!i&&react_1.default.createElement(core_1.Button,{text:"Fit to background",minimal:!0,onClick:function(){c.set({x:0,y:0,width:t.width,height:t.height,rotation:0})}}),!a&&react_1.default.createElement(core_1.Button,{text:"Crop",minimal:!0,onClickCapture:function(e){e.stopPropagation(),c.toggleCropMode(!0)}})),l&&react_1.default.createElement(react_1.default.Fragment,null,react_1.default.createElement(core_1.Button,{text:"Done",minimal:!0,icon:"tick",onClickCapture:function(e){c.toggleCropMode(!1)}}),react_1.default.createElement(core_1.Button,{text:"Cancel",minimal:!0,icon:"cross",onClickCapture:function(e){c.set(__assign({},n.current)),c.toggleCropMode(!1)}})))})),exports.default=exports.ImageToolbar;