{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (e, t, r, o) {\n  return new (r || (r = Promise))(function (n, i) {\n    function l(e) {\n      try {\n        a(o.next(e));\n      } catch (e) {\n        i(e);\n      }\n    }\n\n    function s(e) {\n      try {\n        a(o.throw(e));\n      } catch (e) {\n        i(e);\n      }\n    }\n\n    function a(e) {\n      var t;\n      e.done ? n(e.value) : (t = e.value, t instanceof r ? t : new r(function (e) {\n        e(t);\n      })).then(l, s);\n    }\n\n    a((o = o.apply(e, t || [])).next());\n  });\n},\n    __generator = this && this.__generator || function (e, t) {\n  var r,\n      o,\n      n,\n      i,\n      l = {\n    label: 0,\n    sent: function sent() {\n      if (1 & n[0]) throw n[1];\n      return n[1];\n    },\n    trys: [],\n    ops: []\n  };\n  return i = {\n    next: s(0),\n    throw: s(1),\n    return: s(2)\n  }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function () {\n    return this;\n  }), i;\n\n  function s(i) {\n    return function (s) {\n      return function (i) {\n        if (r) throw new TypeError(\"Generator is already executing.\");\n\n        for (; l;) {\n          try {\n            if (r = 1, o && (n = 2 & i[0] ? o.return : i[0] ? o.throw || ((n = o.return) && n.call(o), 0) : o.next) && !(n = n.call(o, i[1])).done) return n;\n\n            switch (o = 0, n && (i = [2 & i[0], n.value]), i[0]) {\n              case 0:\n              case 1:\n                n = i;\n                break;\n\n              case 4:\n                return l.label++, {\n                  value: i[1],\n                  done: !1\n                };\n\n              case 5:\n                l.label++, o = i[1], i = [0];\n                continue;\n\n              case 7:\n                i = l.ops.pop(), l.trys.pop();\n                continue;\n\n              default:\n                if (!(n = l.trys, (n = n.length > 0 && n[n.length - 1]) || 6 !== i[0] && 2 !== i[0])) {\n                  l = 0;\n                  continue;\n                }\n\n                if (3 === i[0] && (!n || i[1] > n[0] && i[1] < n[3])) {\n                  l.label = i[1];\n                  break;\n                }\n\n                if (6 === i[0] && l.label < n[1]) {\n                  l.label = n[1], n = i;\n                  break;\n                }\n\n                if (n && l.label < n[2]) {\n                  l.label = n[2], l.ops.push(i);\n                  break;\n                }\n\n                n[2] && l.ops.pop(), l.trys.pop();\n                continue;\n            }\n\n            i = t.call(e, l);\n          } catch (e) {\n            i = [6, e], o = 0;\n          } finally {\n            r = n = 0;\n          }\n        }\n\n        if (5 & i[0]) throw i[1];\n        return {\n          value: i[0] ? i[1] : void 0,\n          done: !0\n        };\n      }([i, s]);\n    };\n  }\n},\n    __importDefault = this && this.__importDefault || function (e) {\n  return e && e.__esModule ? e : {\n    default: e\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n}), exports.replaceColors = exports.fixSize = exports.getSvgSize = exports.svgToURL = exports.getColors = exports.urlToString = exports.urlToBase64 = void 0;\n\nvar konva_1 = __importDefault(require(\"konva\"));\n\nfunction isInsideDef(e) {\n  for (; e.parentNode;) {\n    if (\"defs\" === e.nodeName) return !0;\n    e = e.parentNode;\n  }\n\n  return !1;\n}\n\nfunction getElementColors(e) {\n  var t = {\n    fill: \"\",\n    stroke: \"\"\n  };\n  return e.getAttribute(\"fill\") && \"none\" !== e.getAttribute(\"fill\") && (t.fill = e.getAttribute(\"fill\")), !t.fill && e.style.fill && \"none\" !== e.style.fill && (t.fill = e.style.fill), e.getAttribute(\"stroke\") && (t.stroke = e.getAttribute(\"stroke\")), !t.stroke && e.style.stroke && (t.stroke = e.style.stroke), t.stroke || t.fill || (t.fill = \"black\"), t;\n}\n\nvar SVG_SHAPES = [\"path\", \"rect\", \"circle\"];\n\nfunction getAllElementsWithColor(e) {\n  for (var t = [], r = e.getElementsByTagName(\"*\"), o = 0, n = r.length; o < n; o++) {\n    var i = r[o];\n    isInsideDef(i) || (null !== i.getAttribute(\"fill\") && t.push(i), (null !== i.getAttribute(\"stroke\") || i.style && i.style.fill || SVG_SHAPES.indexOf(i.nodeName) >= 0) && t.push(i));\n  }\n\n  return t;\n}\n\nfunction urlToBase64(e) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (t) {\n      switch (t.label) {\n        case 0:\n          return [4, fetch(e)];\n\n        case 1:\n          return [4, t.sent().text()];\n\n        case 2:\n          return [2, svgToURL(t.sent())];\n      }\n    });\n  });\n}\n\nfunction urlToString(e) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (t) {\n      switch (t.label) {\n        case 0:\n          return [4, fetch(e, {\n            mode: \"cors\"\n          })];\n\n        case 1:\n          return [4, t.sent().text()];\n\n        case 2:\n          return [2, t.sent()];\n      }\n    });\n  });\n}\n\nfunction getColors(e) {\n  var t = getAllElementsWithColor(new DOMParser().parseFromString(e, \"image/svg+xml\")),\n      r = [];\n  return t.forEach(function (e) {\n    var t = getElementColors(e);\n    [t.fill, t.stroke].forEach(function (e) {\n      e && konva_1.default.Util.colorToRGBA(e) && -1 === r.indexOf(e) && r.push(e);\n    });\n  }), r;\n}\n\nfunction svgToURL(e) {\n  return \"data:image/svg+xml;base64,\" + window.btoa(unescape(encodeURIComponent(e)));\n}\n\nfunction getSvgSize(e) {\n  return __awaiter(this, void 0, void 0, function () {\n    var t, r, o, n, i, l, s;\n    return __generator(this, function (a) {\n      switch (a.label) {\n        case 0:\n          return [4, urlToString(e)];\n\n        case 1:\n          return t = a.sent(), r = new DOMParser(), o = r.parseFromString(t, \"image/svg+xml\"), n = o.documentElement.getAttribute(\"viewBox\"), i = (null == n ? void 0 : n.split(\" \")) || [], i[0], i[1], l = i[2], s = i[3], [2, {\n            width: parseFloat(l),\n            height: parseFloat(s)\n          }];\n      }\n    });\n  });\n}\n\nfunction fixSize(e) {\n  var t = new DOMParser().parseFromString(e, \"image/svg+xml\"),\n      r = t.documentElement.getAttribute(\"viewBox\"),\n      o = (null == r ? void 0 : r.split(\" \")) || [],\n      n = (o[0], o[1], o[2]),\n      i = o[3];\n  return t.documentElement.getAttribute(\"width\") || t.documentElement.setAttribute(\"width\", n + \"px\"), t.documentElement.getAttribute(\"height\") || t.documentElement.setAttribute(\"height\", i + \"px\"), new XMLSerializer().serializeToString(t);\n}\n\nexports.urlToBase64 = urlToBase64, exports.urlToString = urlToString, exports.getColors = getColors, exports.svgToURL = svgToURL, exports.getSvgSize = getSvgSize, exports.fixSize = fixSize;\n\nvar sameColors = function sameColors(e, t) {\n  return !(!t || !t) && e.r === t.r && e.g === t.g && e.b === t.b && e.a === t.a;\n};\n\nfunction replaceColors(e, t) {\n  var r = new DOMParser().parseFromString(e, \"image/svg+xml\"),\n      o = getAllElementsWithColor(r),\n      n = Array.from(t.keys());\n  return o.forEach(function (e) {\n    var r = getElementColors(e);\n    [{\n      prop: \"fill\",\n      color: r.fill\n    }, {\n      prop: \"stroke\",\n      color: r.stroke\n    }].forEach(function (r) {\n      var o = r.prop,\n          i = r.color,\n          l = n.find(function (e) {\n        return sameColors(konva_1.default.Util.colorToRGBA(e), konva_1.default.Util.colorToRGBA(i));\n      });\n      l && (e.style[o] = t.get(l));\n    });\n  }), svgToURL(new XMLSerializer().serializeToString(r));\n}\n\nexports.replaceColors = replaceColors;","map":null,"metadata":{},"sourceType":"script"}