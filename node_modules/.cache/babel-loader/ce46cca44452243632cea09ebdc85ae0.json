{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (e) {\n  return e && e.__esModule ? e : {\n    default: e\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n}), exports.TextToolbar = exports.SpacingInput = exports.FontColorInput = exports.FontStyleGroup = exports.FontSizeInput = exports.FontFamilyInput = void 0;\n\nvar react_1 = __importDefault(require(\"react\")),\n    mobx_react_lite_1 = require(\"mobx-react-lite\"),\n    core_1 = require(\"@blueprintjs/core\"),\n    select_1 = require(\"@blueprintjs/select\"),\n    fonts_1 = require(\"../utils/fonts\"),\n    color_picker_1 = __importDefault(require(\"./color-picker\")),\n    filters_picker_1 = __importDefault(require(\"./filters-picker\")),\n    MdcFormatLineSpacing_1 = __importDefault(require(\"@meronex/icons/mdc/MdcFormatLineSpacing\"));\n\nexports.FontFamilyInput = mobx_react_lite_1.observer(function (e) {\n  var t = e.element,\n      n = e.store,\n      r = n.fonts.map(function (e) {\n    return e.fontFamily;\n  }).concat(fonts_1.getFontsList());\n  react_1.default.useEffect(function () {\n    r.forEach(function (e) {\n      n.loadFont(e);\n    });\n  }, [r]);\n  var o = t.fontFamily;\n  return o.length > 15 && (o = t.fontFamily.slice(0, 15) + \"...\"), react_1.default.createElement(select_1.Select, {\n    items: r,\n    itemRenderer: function itemRenderer(e, t) {\n      var n = t.handleClick,\n          r = t.modifiers,\n          o = t.query;\n      return -1 === e.toLowerCase().indexOf(o.toLowerCase()) ? null : react_1.default.createElement(core_1.MenuItem, {\n        key: e,\n        text: e,\n        active: r.active,\n        disabled: r.disabled,\n        onClick: n,\n        style: {\n          fontFamily: '\"' + e + '\"'\n        }\n      });\n    },\n    activeItem: t.fontFamily,\n    onItemSelect: function onItemSelect(e) {\n      t.set({\n        fontFamily: e\n      });\n    }\n  }, react_1.default.createElement(core_1.Button, {\n    text: o,\n    rightIcon: \"caret-down\",\n    minimal: !0,\n    style: {\n      marginRight: \"5px\",\n      fontFamily: '\"' + t.fontFamily + '\"',\n      overflow: \"hidden\",\n      whiteSpace: \"nowrap\"\n    }\n  }));\n}), exports.FontSizeInput = mobx_react_lite_1.observer(function (e) {\n  var t = e.element;\n  return react_1.default.createElement(core_1.NumericInput, {\n    onValueChange: function onValueChange(e) {\n      t.set({\n        fontSize: e\n      });\n    },\n    value: Math.round(t.fontSize),\n    style: {\n      width: \"50px\"\n    },\n    min: 5\n  });\n});\nvar ALIGN_OPTIONS = [\"left\", \"center\", \"right\"];\nexports.FontStyleGroup = mobx_react_lite_1.observer(function (e) {\n  var t = e.element;\n  return react_1.default.createElement(core_1.ButtonGroup, null, react_1.default.createElement(core_1.Button, {\n    minimal: !0,\n    icon: \"align-\" + t.align,\n    onClick: function onClick() {\n      var e = (ALIGN_OPTIONS.indexOf(t.align) + 1 + ALIGN_OPTIONS.length) % ALIGN_OPTIONS.length,\n          n = ALIGN_OPTIONS[e];\n      t.set({\n        align: n\n      });\n    }\n  }), react_1.default.createElement(core_1.Button, {\n    minimal: !0,\n    icon: \"bold\",\n    active: \"bold\" === t.fontWeight || \"700\" === t.fontWeight,\n    onClick: function onClick() {\n      \"bold\" === t.fontWeight || \"700\" === t.fontWeight ? t.set({\n        fontWeight: \"normal\"\n      }) : t.set({\n        fontWeight: \"bold\"\n      });\n    }\n  }), react_1.default.createElement(core_1.Button, {\n    minimal: !0,\n    icon: \"italic\",\n    active: \"italic\" === t.fontStyle,\n    onClick: function onClick() {\n      \"italic\" === t.fontStyle ? t.set({\n        fontStyle: \"normal\"\n      }) : t.set({\n        fontStyle: \"italic\"\n      });\n    }\n  }), react_1.default.createElement(core_1.Button, {\n    minimal: !0,\n    icon: \"underline\",\n    active: t.textDecoration.indexOf(\"underline\") >= 0,\n    onClick: function onClick() {\n      var e = t.textDecoration.split(\" \");\n      e.indexOf(\"underline\") >= 0 ? e = e.filter(function (e) {\n        return \"underline\" !== e;\n      }) : e.push(\"underline\"), t.set({\n        textDecoration: e.join(\" \")\n      });\n    }\n  }));\n}), exports.FontColorInput = mobx_react_lite_1.observer(function (e) {\n  var t = e.element;\n  return react_1.default.createElement(color_picker_1.default, {\n    value: t.fill,\n    onChange: function onChange(e) {\n      return t.set({\n        fill: e\n      });\n    }\n  });\n}), exports.SpacingInput = mobx_react_lite_1.observer(function (e) {\n  var t = e.element;\n  return react_1.default.createElement(core_1.Popover, {\n    content: react_1.default.createElement(\"div\", {\n      style: {\n        padding: \"15px 25px\",\n        width: \"200px\"\n      }\n    }, react_1.default.createElement(\"p\", null, \"Line height\"), react_1.default.createElement(core_1.Slider, {\n      value: \"number\" == typeof t.lineHeight ? 100 * t.lineHeight : 120,\n      labelStepSize: 50,\n      onChange: function onChange(e) {\n        t.set({\n          lineHeight: e / 100\n        });\n      },\n      min: 50,\n      max: 250,\n      stepSize: 10,\n      showTrackFill: !0\n    }), react_1.default.createElement(\"p\", null, \"Letter spacing\"), react_1.default.createElement(core_1.Slider, {\n      value: 100 * t.letterSpacing,\n      labelStepSize: 50,\n      onChange: function onChange(e) {\n        t.set({\n          letterSpacing: e / 100\n        });\n      },\n      min: -50,\n      max: 250,\n      stepSize: 10,\n      showTrackFill: !1\n    })),\n    position: core_1.Position.BOTTOM\n  }, react_1.default.createElement(core_1.Button, {\n    icon: react_1.default.createElement(MdcFormatLineSpacing_1.default, {\n      className: \"bp3-icon\",\n      style: {\n        fontSize: \"20px\"\n      }\n    }),\n    minimal: !0\n  }));\n});\nvar PROPS_MAP = {\n  font: exports.FontFamilyInput,\n  fontSize: exports.FontSizeInput,\n  fontVariant: exports.FontStyleGroup,\n  filter: filters_picker_1.default,\n  fontColor: exports.FontColorInput,\n  spacing: exports.SpacingInput\n};\nexports.TextToolbar = mobx_react_lite_1.observer(function (e) {\n  var t = e.store,\n      n = e.hideTextEffects,\n      r = e.hideTextSpacing,\n      o = e.hideTextBold,\n      i = e.hideTextItalic,\n      l = e.hideTextUnderline,\n      a = t.selectedElements[0],\n      c = [\"fontColor\", \"font\", \"fontSize\", \"fontVariant\", !r && \"spacing\", !n && \"filter\"].filter(function (e) {\n    return !!e;\n  });\n  return react_1.default.createElement(core_1.Navbar.Group, {\n    align: core_1.Alignment.LEFT,\n    style: {\n      width: \"calc(100% - 450px)\"\n    }\n  }, react_1.default.createElement(core_1.OverflowList, {\n    items: c,\n    style: {\n      width: \"100%\"\n    },\n    visibleItemRenderer: function visibleItemRenderer(e) {\n      var n = PROPS_MAP[e];\n      return react_1.default.createElement(n, {\n        element: a,\n        store: t,\n        key: e,\n        hideTextBold: o,\n        hideTextItalic: i,\n        hideTextUnderline: l\n      });\n    },\n    collapseFrom: core_1.Boundary.END,\n    overflowRenderer: function overflowRenderer(e) {\n      return react_1.default.createElement(core_1.Popover, {\n        content: react_1.default.createElement(\"div\", {\n          style: {\n            padding: \"10px\",\n            display: \"flex\"\n          }\n        }, e.map(function (e) {\n          var n = PROPS_MAP[e];\n          return react_1.default.createElement(n, {\n            key: e,\n            element: a,\n            store: t,\n            hideTextBold: o,\n            hideTextItalic: i,\n            hideTextUnderline: l\n          });\n        })),\n        position: core_1.Position.BOTTOM\n      }, react_1.default.createElement(core_1.Button, {\n        icon: \"more\",\n        minimal: !0,\n        style: {\n          marginLeft: \"20px\"\n        }\n      }));\n    }\n  }));\n}), exports.default = exports.TextToolbar;","map":null,"metadata":{},"sourceType":"script"}