{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { dequal } from 'dequal/lite';\nimport Cache from './cache';\nimport webPreset from './libs/web-preset'; // cache\n\nvar cache = new Cache(); // error retry\n\nfunction onErrorRetry(_, __, config, revalidate, opts) {\n  if (!config.isDocumentVisible()) {\n    // if it's hidden, stop\n    // it will auto revalidate when focus\n    return;\n  }\n\n  if (typeof config.errorRetryCount === 'number' && opts.retryCount > config.errorRetryCount) {\n    return;\n  } // exponential backoff\n\n\n  var count = Math.min(opts.retryCount, 8);\n  var timeout = ~~((Math.random() + 0.5) * (1 << count)) * config.errorRetryInterval;\n  setTimeout(revalidate, timeout, opts);\n} // client side: need to adjust the config\n// based on the browser status\n// slow connection (<= 70Kbps)\n\n\nvar slowConnection = typeof window !== 'undefined' && // @ts-ignore\nnavigator['connection'] && // @ts-ignore\n['slow-2g', '2g'].indexOf(navigator['connection'].effectiveType) !== -1; // config\n\nvar defaultConfig = __assign({\n  // events\n  onLoadingSlow: function onLoadingSlow() {},\n  onSuccess: function onSuccess() {},\n  onError: function onError() {},\n  onErrorRetry: onErrorRetry,\n  errorRetryInterval: (slowConnection ? 10 : 5) * 1000,\n  focusThrottleInterval: 5 * 1000,\n  dedupingInterval: 2 * 1000,\n  loadingTimeout: (slowConnection ? 5 : 3) * 1000,\n  refreshInterval: 0,\n  revalidateOnFocus: true,\n  revalidateOnReconnect: true,\n  refreshWhenHidden: false,\n  refreshWhenOffline: false,\n  shouldRetryOnError: true,\n  suspense: false,\n  compare: dequal,\n  isPaused: function isPaused() {\n    return false;\n  }\n}, webPreset);\n\nexport { cache };\nexport default defaultConfig;","map":null,"metadata":{},"sourceType":"module"}